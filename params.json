{"name":"LDVMi","tagline":"Linked Data Visualization Model Implementation","body":"### What is this for?\r\nEver tried to visualise something from LOD cloud? Ever tried to combine your dataset with something from LOD cloud? Those are still not very easy tasks. Tell us, where your data are and we will try to combine it with other datasets we know and offer you a list of possible visualisation pipelines we discovered.\r\n\r\n### What is LDVMi?\r\nLDVMi is an implementation of the [Linked Data Visualization Model](http://events.linkeddata.org/ldow2015/papers/ldow2015_paper_08.pdf). Our goal is to provide a platform, which would make it easier to consume Linked Data and combine your datasets with others to provide a meaningful visualisation in a few simple steps.\r\n\r\nThe tool allows you to register LDVM components (use [LDVM vocabulary](http://lov.okfn.org/dataset/lov/vocabs/ldvm)). Based on those components, visualisation pipelines could be assembled. You may either do that manually by uploading your pipeline to the system or run an algorithm called pipeline discovery, which tries to use all registered components and selected datasources to assemble a pipeline automatically using LDVM compatibility checking.\r\n\r\nThis project replaces an old tool called Payola, all valuable thoughts used to build it are about to be migrated to LDVMi.\r\n\r\n### What visualisations the tool offers?\r\nLDVMi itself now implements the following visualisation techniques:\r\n* DataCube (line charts, bar charts, column charts, pie charts; slicing, multiple measures support, rotating the cube)\r\n* Google Maps (markers with labels and descriptions, facets)\r\n* OpenLayers (currently only WKT support for EPSG 4258, facets)\r\n* Hierarchies (D3: Zoomable partition layout, Zoomable sunburst, Zoomable PackLayout, ...)\r\n\r\n### Running demo?\r\n[Yes!](http://ldvm.opendata.cz)\r\n\r\n### What has been used to build the platform?\r\nThe application is based on PlayFramework 2.3. Written in Scala and JavaScript. On the client side, AngularJS 1.x is involved heavily. Components are akka actors.","google":"UA-27033152-4","note":"Don't delete this file! It's used internally to help with page regeneration."}